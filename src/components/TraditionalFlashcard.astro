---
export interface Props {
  term: string;
  definition: string;
  example: string;
  difficulty: 'basic' | 'intermediate' | 'advanced';
  id: string;
  index: number;
  total: number;
}

const { term, definition, example, difficulty, id, index, total } = Astro.props;

const difficultyColors = {
  basic: '#10b981',
  intermediate: '#f59e0b', 
  advanced: '#ef4444'
};
---

<div class="flashcard-wrapper" data-card-id={id} data-index={index}>
  <!-- Card Counter -->
  <div class="card-counter mb-4 text-center">
    <span class="text-gray-600 font-medium">{index + 1} of {total}</span>
  </div>

  <!-- Traditional Flashcard -->
  <div class="traditional-flashcard group">
    <div class="flashcard-inner">
      <!-- Front Side -->
      <div class="flashcard-side flashcard-front">
        <!-- Spiral Binding -->
        <div class="spiral-binding">
          <div class="spiral-ring"></div>
          <div class="spiral-ring"></div>
          <div class="spiral-ring"></div>
        </div>
        
        <!-- Red Margin Line -->
        <div class="margin-line"></div>
        
        <!-- Ruled Lines Background -->
        <div class="ruled-lines"></div>
        
        <!-- Content -->
        <div class="card-content">
          <div class="difficulty-indicator" style={`background-color: ${difficultyColors[difficulty]}`}>
            {difficulty.toUpperCase()}
          </div>
          
          <div class="term-section">
            <h2 class="medical-term">{term}</h2>
            <div class="term-underline"></div>
          </div>
          
          <div class="instruction-text">
            Click to reveal definition
          </div>
          
          <div class="flip-indicator">
            <svg class="flip-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"/>
            </svg>
          </div>
        </div>
      </div>

      <!-- Back Side -->
      <div class="flashcard-side flashcard-back">
        <!-- Spiral Binding -->
        <div class="spiral-binding">
          <div class="spiral-ring"></div>
          <div class="spiral-ring"></div>
          <div class="spiral-ring"></div>
        </div>
        
        <!-- Red Margin Line -->
        <div class="margin-line"></div>
        
        <!-- Ruled Lines Background -->
        <div class="ruled-lines"></div>
        
        <!-- Content -->
        <div class="card-content">
          <div class="difficulty-indicator" style={`background-color: ${difficultyColors[difficulty]}`}>
            {difficulty.toUpperCase()}
          </div>
          
          <div class="definition-section">
            <h3 class="definition-label">Definition:</h3>
            <p class="definition-text">{definition}</p>
          </div>
          
          <div class="example-section">
            <h4 class="example-label">Clinical Example:</h4>
            <p class="example-text">{example}</p>
          </div>
          
          <div class="flip-indicator">
            <svg class="flip-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"/>
            </svg>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Study Controls -->
  <div class="study-controls mt-6 flex justify-center space-x-4">
    <button class="study-btn study-btn-incorrect" onclick="markIncorrect(this)" title="Mark as incorrect">
      <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
      </svg>
      <span>Need Review</span>
    </button>
    
    <button class="study-btn study-btn-correct" onclick="markCorrect(this)" title="Mark as correct">
      <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
      </svg>
      <span>Got It!</span>
    </button>
  </div>
</div>

<style>
  @import url('https://fonts.googleapis.com/css2?family=Crimson+Text:ital,wght@0,400;0,600;1,400&family=Source+Serif+Pro:wght@400;600&display=swap');

  .flashcard-wrapper {
    width: 100%;
    max-width: 600px;
    margin: 0 auto;
    perspective: 1000px;
  }

  .card-counter {
    font-family: 'Crimson Text', serif;
    font-size: 1.1rem;
    letter-spacing: 0.5px;
  }

  .traditional-flashcard {
    width: 100%;
    height: 400px;
    position: relative;
    cursor: pointer;
    transition: transform 0.3s ease;
  }

  .traditional-flashcard:hover {
    transform: translateY(-4px) scale(1.02);
  }

  .flashcard-inner {
    position: relative;
    width: 100%;
    height: 100%;
    transition: transform 0.8s cubic-bezier(0.4, 0.0, 0.2, 1);
    transform-style: preserve-3d;
  }

  .flashcard-inner.flipped {
    transform: rotateY(180deg);
  }

  .flashcard-side {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    background: #ffffff;
    border-radius: 8px;
    box-shadow: 
      0 4px 6px -1px rgba(0, 0, 0, 0.1),
      0 2px 4px -1px rgba(0, 0, 0, 0.06),
      inset 0 0 0 1px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    position: relative;
  }

  .flashcard-back {
    transform: rotateY(180deg);
  }

  /* Spiral Binding */
  .spiral-binding {
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 40px;
    background: linear-gradient(to right, #f8f9fa, #e9ecef);
    border-right: 2px solid #dee2e6;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;
    padding: 20px 0;
  }

  .spiral-ring {
    width: 20px;
    height: 20px;
    border-radius: 50%;
    border: 3px solid #495057;
    background: #ffffff;
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  /* Red Margin Line */
  .margin-line {
    position: absolute;
    left: 80px;
    top: 0;
    bottom: 0;
    width: 2px;
    background: #dc3545;
    opacity: 0.8;
  }

  /* Ruled Lines */
  .ruled-lines {
    position: absolute;
    left: 90px;
    right: 20px;
    top: 60px;
    bottom: 60px;
    background-image: repeating-linear-gradient(
      transparent,
      transparent 23px,
      #e9ecef 23px,
      #e9ecef 25px
    );
    opacity: 0.6;
  }

  /* Content */
  .card-content {
    position: absolute;
    left: 90px;
    right: 30px;
    top: 30px;
    bottom: 30px;
    z-index: 10;
  }

  .difficulty-indicator {
    position: absolute;
    top: -10px;
    right: -10px;
    color: white;
    padding: 4px 12px;
    border-radius: 12px;
    font-size: 0.7rem;
    font-weight: 600;
    letter-spacing: 0.5px;
    font-family: 'Source Serif Pro', serif;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  }

  .term-section {
    margin-top: 40px;
    margin-bottom: 40px;
  }

  .medical-term {
    font-family: 'Crimson Text', serif;
    font-size: 2.5rem;
    font-weight: 600;
    color: #000000;
    line-height: 1.2;
    margin: 0;
    text-align: center;
    letter-spacing: 0.5px;
  }

  .term-underline {
    width: 100%;
    height: 3px;
    background: #000000;
    margin: 15px 0;
    border-radius: 1px;
  }

  .instruction-text {
    font-family: 'Source Serif Pro', serif;
    font-size: 1rem;
    color: #6c757d;
    text-align: center;
    font-style: italic;
    margin-top: 60px;
  }

  .definition-section {
    margin-top: 20px;
    margin-bottom: 30px;
  }

  .definition-label {
    font-family: 'Crimson Text', serif;
    font-size: 1.2rem;
    font-weight: 600;
    color: #000000;
    margin: 0 0 10px 0;
    text-decoration: underline;
    text-decoration-color: #dc3545;
    text-underline-offset: 4px;
  }

  .definition-text {
    font-family: 'Source Serif Pro', serif;
    font-size: 1.1rem;
    color: #000000;
    line-height: 1.6;
    margin: 0;
    text-align: justify;
  }

  .example-section {
    margin-top: 30px;
  }

  .example-label {
    font-family: 'Crimson Text', serif;
    font-size: 1rem;
    font-weight: 600;
    color: #000000;
    margin: 0 0 8px 0;
    text-decoration: underline;
    text-decoration-color: #dc3545;
    text-underline-offset: 3px;
  }

  .example-text {
    font-family: 'Source Serif Pro', serif;
    font-size: 0.95rem;
    color: #495057;
    line-height: 1.5;
    margin: 0;
    font-style: italic;
    text-align: justify;
  }

  .flip-indicator {
    position: absolute;
    bottom: 10px;
    right: 10px;
    color: #6c757d;
    opacity: 0.7;
    transition: opacity 0.3s ease;
  }

  .flip-icon {
    width: 20px;
    height: 20px;
  }

  .traditional-flashcard:hover .flip-indicator {
    opacity: 1;
  }

  /* Study Controls */
  .study-controls {
    font-family: 'Source Serif Pro', serif;
  }

  .study-btn {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 12px 24px;
    border: 2px solid;
    border-radius: 8px;
    font-weight: 600;
    font-size: 0.95rem;
    transition: all 0.3s ease;
    cursor: pointer;
    background: white;
  }

  .study-btn-incorrect {
    border-color: #dc3545;
    color: #dc3545;
  }

  .study-btn-incorrect:hover {
    background: #dc3545;
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(220, 53, 69, 0.3);
  }

  .study-btn-correct {
    border-color: #198754;
    color: #198754;
  }

  .study-btn-correct:hover {
    background: #198754;
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(25, 135, 84, 0.3);
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .flashcard-wrapper {
      max-width: 100%;
      padding: 0 10px;
    }

    .traditional-flashcard {
      height: 350px;
    }

    .medical-term {
      font-size: 2rem;
    }

    .card-content {
      left: 70px;
      right: 20px;
    }

    .margin-line {
      left: 60px;
    }

    .ruled-lines {
      left: 70px;
    }

    .study-controls {
      flex-direction: column;
      gap: 12px;
    }

    .study-btn {
      width: 100%;
      justify-content: center;
    }
  }

  @media (max-width: 480px) {
    .traditional-flashcard {
      height: 320px;
    }

    .medical-term {
      font-size: 1.8rem;
    }

    .definition-text {
      font-size: 1rem;
    }

    .example-text {
      font-size: 0.9rem;
    }
  }
</style>

<script is:inline>
  function setupTraditionalFlashcard() {
    const flashcards = document.querySelectorAll('.traditional-flashcard');
    
    flashcards.forEach(card => {
      const inner = card.querySelector('.flashcard-inner');
      let isFlipped = false;
      
      card.addEventListener('click', (e) => {
        // Don't flip if clicking on study buttons
        if (e.target && (e.target as any).closest && (e.target as any).closest('.study-btn')) {
          return;
        }
        
        isFlipped = !isFlipped;
        inner.classList.toggle('flipped', isFlipped);
      });
    });
  }
  
  function markCorrect(button) {
    if ((window as any).medicalTermsApp) (window as any).medicalTermsApp.studyStats.studied++;
    if ((window as any).medicalTermsApp) (window as any).medicalTermsApp.studyStats.correct++;
    if ((window as any).medicalTermsApp) (window as any).medicalTermsApp.saveStats();
    
    // Visual feedback
    button.style.transform = 'scale(1.1)';
    setTimeout(() => {
      button.style.transform = 'scale(1)';
    }, 200);
  }
  
  function markIncorrect(button) {
    if ((window as any).medicalTermsApp) (window as any).medicalTermsApp.studyStats.studied++;
    if ((window as any).medicalTermsApp) (window as any).medicalTermsApp.saveStats();
    
    // Visual feedback
    button.style.transform = 'scale(1.1)';
    setTimeout(() => {
      button.style.transform = 'scale(1)';
    }, 200);
  }
  
  document.addEventListener('DOMContentLoaded', setupTraditionalFlashcard);
</script>