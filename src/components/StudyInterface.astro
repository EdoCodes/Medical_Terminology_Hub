---
interface Props {
  terms: any[];
  category?: string;
}

const { terms, category = 'all' } = Astro.props;
---

<div class="study-interface">
  <!-- Search Bar -->
  <div class="search-section">
    <div class="search-container">
      <input 
        type="text" 
        id="searchInput" 
        class="search-input" 
        placeholder="Search medical terms..."
      >
      <button class="search-btn" id="searchBtn">Search</button>
    </div>
  </div>

  <!-- Main Content Grid -->
  <div class="content-grid">
    <!-- Left Sidebar - Study Tools First -->
    <aside class="left-sidebar">
      <div class="sidebar-section">
        <h3 class="sidebar-title">Study Tools</h3>
        <div class="study-tools">
          <a href="/cardiovascular" class="tool-link">
            <span class="tool-icon">‚ù§Ô∏è</span>
            Cardiovascular Terms
          </a>
          <a href="/respiratory" class="tool-link">
            <span class="tool-icon">ü´Å</span>
            Respiratory Terms
          </a>
          <a href="/neurology" class="tool-link">
            <span class="tool-icon">üß†</span>
            Neurology Terms
          </a>
          <a href="/dermatology" class="tool-link">
            <span class="tool-icon">ü©∫</span>
            Dermatology Terms
          </a>
        </div>
      </div>

      <div class="sidebar-section">
        <h3 class="sidebar-title">Medical Resources</h3>
        <div class="resource-links">
          <a href="https://www.medlineplus.gov/" target="_blank" rel="noopener" class="resource-link">
            <span class="resource-icon">üìñ</span>
            <div class="resource-content">
              <div class="resource-name">MedlinePlus</div>
              <div class="resource-desc">Trusted health information</div>
            </div>
          </a>
          <a href="https://www.mayoclinic.org/" target="_blank" rel="noopener" class="resource-link">
            <span class="resource-icon">üè•</span>
            <div class="resource-content">
              <div class="resource-name">Mayo Clinic</div>
              <div class="resource-desc">Medical expertise & care</div>
            </div>
          </a>
          <a href="https://www.webmd.com/" target="_blank" rel="noopener" class="resource-link">
            <span class="resource-icon">üíä</span>
            <div class="resource-content">
              <div class="resource-name">WebMD</div>
              <div class="resource-desc">Medical information</div>
            </div>
          </a>
          <a href="https://www.ncbi.nlm.nih.gov/pubmed/" target="_blank" rel="noopener" class="resource-link">
            <span class="resource-icon">üî¨</span>
            <div class="resource-content">
              <div class="resource-name">PubMed</div>
              <div class="resource-desc">Medical literature</div>
            </div>
          </a>
        </div>
      </div>
    </aside>

    <!-- Main Flashcard Area -->
    <main class="flashcard-main">
      <!-- Flashcard Container with gentle blue background -->
      <div class="flashcard-container">
        <div class="flashcard" id="flashcard">
          <div class="flashcard-inner" id="flashcardInner">
            <div class="flashcard-front">
              <div class="card-header">
                <span class="card-counter" id="cardCounter">1 / 30</span>
              </div>
              <div class="card-content">
                <h1 class="medical-term" id="medicalTerm">Loading...</h1>
                <p class="click-hint">Click to reveal definition</p>
              </div>
            </div>
            <div class="flashcard-back">
              <div class="card-header">
                <span class="card-counter" id="cardCounterBack">1 / 30</span>
              </div>
              <div class="card-content">
                <p class="definition" id="definition">Loading definition...</p>
                <div class="example-section" id="exampleSection" style="display: none;">
                  <h4>Example</h4>
                  <p class="example" id="example"></p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Audio Pronunciation -->
      <div class="pronunciation-section">
        <button class="pronunciation-btn" id="pronounceBtn" title="Listen to pronunciation">
          <span class="pronunciation-icon">üîä</span>
          <span class="pronunciation-text">Pronounce</span>
        </button>
        <div class="pronunciation-guide" id="pronunciationGuide">
          <span class="pronunciation-label">Pronunciation:</span>
          <span class="pronunciation-phonetic" id="pronunciationText"></span>
        </div>
      </div>

      <!-- Navigation -->
      <div class="navigation">
        <button class="nav-btn" id="prevBtn">‚Üê Previous</button>
        <button class="nav-btn shuffle-btn" id="shuffleBtn">Shuffle</button>
        <button class="nav-btn" id="nextBtn">Next ‚Üí</button>
      </div>
    </main>

    <!-- Right Sidebar - Mock Tests -->
    <aside class="right-sidebar">
      <div class="sidebar-section">
        <h3 class="sidebar-title">Practice Tests</h3>
        <div class="test-links">
          <a href="/tests/cardiovascular" class="test-link">
            <span class="test-icon">üìù</span>
            <div class="test-content">
              <div class="test-name">Cardiovascular Quiz</div>
              <div class="test-desc">25 multiple choice questions</div>
            </div>
          </a>
          <a href="/tests/respiratory" class="test-link">
            <span class="test-icon">üìù</span>
            <div class="test-content">
              <div class="test-name">Respiratory Quiz</div>
              <div class="test-desc">25 multiple choice questions</div>
            </div>
          </a>
          <a href="/tests/neurology" class="test-link">
            <span class="test-icon">üìù</span>
            <div class="test-content">
              <div class="test-name">Neurology Quiz</div>
              <div class="test-desc">25 multiple choice questions</div>
            </div>
          </a>
          <a href="/tests/comprehensive" class="test-link">
            <span class="test-icon">üéØ</span>
            <div class="test-content">
              <div class="test-name">Comprehensive Test</div>
              <div class="test-desc">100 mixed questions</div>
            </div>
          </a>
        </div>
      </div>

      <div class="sidebar-section">
        <h3 class="sidebar-title">Quick Stats</h3>
        <div class="stats-display">
          <div class="stat-item">
            <span class="stat-number" id="studiedToday">0</span>
            <span class="stat-label">Studied Today</span>
          </div>
          <div class="stat-item">
            <span class="stat-number" id="totalProgress">0%</span>
            <span class="stat-label">Progress</span>
          </div>
          <div class="stat-item">
            <span class="stat-number" id="streak">0</span>
            <span class="stat-label">Day Streak</span>
          </div>
        </div>
      </div>
    </aside>
  </div>
</div>

<style>
  .study-interface {
    max-width: 1400px;
    margin: 0 auto;
    padding: 20px;
  }

  /* Search Section */
  .search-section {
    background: linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%);
    border-radius: 12px;
    padding: 24px;
    margin-bottom: 32px;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  }

  .search-container {
    display: flex;
    gap: 12px;
    max-width: 600px;
    margin: 0 auto;
  }

  .search-input {
    flex: 1;
    padding: 12px 16px;
    border: 1px solid #d1d5db;
    border-radius: 8px;
    font-size: 16px;
    background: white;
    transition: all 0.2s ease;
  }

  .search-input:focus {
    outline: none;
    border-color: #4A90E2;
    box-shadow: 0 0 0 3px rgba(74, 144, 226, 0.1);
  }

  .search-btn {
    padding: 12px 24px;
    background: #4A90E2;
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 14px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .search-btn:hover {
    background: #3b82f6;
    transform: translateY(-1px);
  }

  /* Three-Column Layout */
  .content-grid {
    display: grid;
    grid-template-columns: 280px 1fr 280px;
    gap: 24px;
    align-items: start;
  }

  /* Sidebars */
  .left-sidebar,
  .right-sidebar {
    background: white;
    border-radius: 12px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    border: 1px solid #e5e7eb;
    height: fit-content;
    position: sticky;
    top: 100px;
  }

  .sidebar-section {
    padding: 20px;
    border-bottom: 1px solid #f3f4f6;
  }

  .sidebar-section:last-child {
    border-bottom: none;
  }

  .sidebar-title {
    font-size: 16px;
    font-weight: 600;
    color: #1f2937;
    margin: 0 0 16px 0;
  }

  /* Medical Resources (Left Sidebar) */
  .resource-links {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .resource-link {
    display: flex;
    align-items: center;
    gap: 12px;
    padding: 12px;
    border-radius: 8px;
    transition: all 0.2s ease;
    text-decoration: none;
    color: inherit;
    border: 1px solid #f3f4f6;
  }

  .resource-link:hover {
    background: #f8fafc;
    border-color: #e2e8f0;
    transform: translateX(2px);
  }

  .resource-icon {
    font-size: 20px;
    width: 32px;
    text-align: center;
    flex-shrink: 0;
  }

  .resource-content {
    flex: 1;
  }

  .resource-name {
    font-size: 14px;
    font-weight: 500;
    color: #1f2937;
    margin-bottom: 2px;
  }

  .resource-desc {
    font-size: 12px;
    color: #6b7280;
  }

  /* Study Tools */
  .study-tools {
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  .tool-link {
    display: flex;
    align-items: center;
    gap: 12px;
    padding: 10px 12px;
    border-radius: 6px;
    font-size: 14px;
    font-weight: 500;
    color: #374151;
    text-decoration: none;
    transition: all 0.2s ease;
    border: 1px solid #e5e7eb;
  }

  .tool-link:hover {
    background: #4A90E2;
    color: white;
    border-color: #4A90E2;
  }

  .tool-icon {
    font-size: 16px;
  }

  /* Main Flashcard Area */
  .flashcard-main {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  /* Gentle blue background behind flashcard */
  .flashcard-container {
    background: linear-gradient(135deg, #eff6ff 0%, #dbeafe 100%);
    border-radius: 20px;
    padding: 40px;
    margin-bottom: 32px;
    box-shadow: 0 4px 12px rgba(74, 144, 226, 0.1);
    border: 1px solid rgba(74, 144, 226, 0.1);
  }

  .flashcard {
    width: 600px;
    height: 350px;
    perspective: 1000px;
    cursor: pointer;
  }

  .flashcard-inner {
    position: relative;
    width: 100%;
    height: 100%;
    transition: transform 0.6s;
    transform-style: preserve-3d;
  }

  .flashcard-inner.flipped {
    transform: rotateY(180deg);
  }

  .flashcard-front,
  .flashcard-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    border-radius: 12px;
    background: white;
    border: 1px solid #e5e7eb;
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
    display: flex;
    flex-direction: column;
  }

  .flashcard-back {
    transform: rotateY(180deg);
  }

  .card-header {
    background: #4A90E2;
    color: white;
    padding: 16px;
    text-align: center;
    font-weight: 600;
    font-size: 16px;
    border-radius: 12px 12px 0 0;
  }

  .card-content {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 40px;
    text-align: center;
  }

  .medical-term {
    font-size: 32px;
    font-weight: 700;
    color: #1f2937;
    margin: 0 0 16px 0;
    line-height: 1.2;
  }

  .click-hint {
    font-size: 14px;
    color: #6b7280;
    font-style: italic;
    margin: 0;
  }

  .definition {
    font-size: 18px;
    color: #374151;
    line-height: 1.6;
    margin: 0 0 20px 0;
  }

  .example-section {
    margin-top: 20px;
    padding-top: 20px;
    border-top: 1px solid #e5e7eb;
    width: 100%;
  }

  .example-section h4 {
    font-size: 14px;
    font-weight: 600;
    color: #4b5563;
    margin: 0 0 8px 0;
  }

  .example {
    font-size: 16px;
    color: #6b7280;
    font-style: italic;
    margin: 0;
    line-height: 1.4;
  }

  /* Navigation */
  /* Pronunciation Section */
  .pronunciation-section {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 12px;
    margin: 20px 0;
    padding: 16px;
    background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
    border-radius: 12px;
    border: 1px solid #e2e8f0;
  }

  .pronunciation-btn {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 10px 20px;
    background: linear-gradient(135deg, #4f46e5 0%, #3b82f6 100%);
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
    box-shadow: 0 2px 4px rgba(79, 70, 229, 0.2);
  }

  .pronunciation-btn:hover {
    background: linear-gradient(135deg, #4338ca 0%, #2563eb 100%);
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(79, 70, 229, 0.3);
  }

  .pronunciation-btn:active {
    transform: translateY(0);
    box-shadow: 0 2px 4px rgba(79, 70, 229, 0.2);
  }

  .pronunciation-btn:disabled {
    background: #9ca3af;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
  }

  .pronunciation-icon {
    font-size: 16px;
  }

  .pronunciation-guide {
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 14px;
    color: #4b5563;
    text-align: center;
  }

  .pronunciation-label {
    font-weight: 500;
    color: #374151;
  }

  .pronunciation-phonetic {
    font-style: italic;
    color: #6b7280;
    font-weight: 400;
    background: #f9fafb;
    padding: 4px 8px;
    border-radius: 4px;
    border: 1px solid #e5e7eb;
  }

  /* Mobile responsiveness for pronunciation section */
  @media (max-width: 768px) {
    .pronunciation-section {
      margin: 15px 0;
      padding: 12px;
    }
    
    .pronunciation-btn {
      padding: 8px 16px;
      font-size: 13px;
    }
    
    .pronunciation-guide {
      flex-direction: column;
      text-align: center;
      gap: 4px;
    }
    
    .pronunciation-phonetic {
      padding: 3px 6px;
      font-size: 13px;
    }
  }

  .navigation {
    display: flex;
    gap: 16px;
    justify-content: center;
    align-items: center;
  }

  .nav-btn {
    padding: 12px 24px;
    border: 1px solid #d1d5db;
    border-radius: 8px;
    background: white;
    color: #374151;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .nav-btn:hover:not(:disabled) {
    background: #f9fafb;
    border-color: #9ca3af;
  }

  .nav-btn.shuffle-btn {
    background: #4A90E2;
    color: white;
    border-color: #4A90E2;
  }

  .nav-btn.shuffle-btn:hover {
    background: #3b82f6;
    border-color: #3b82f6;
  }

  .nav-btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  /* Practice Tests (Right Sidebar) */
  .test-links {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .test-link {
    display: flex;
    align-items: center;
    gap: 12px;
    padding: 12px;
    border-radius: 8px;
    transition: all 0.2s ease;
    text-decoration: none;
    color: inherit;
    background: #fef3c7;
    border: 1px solid #fcd34d;
  }

  .test-link:hover {
    background: #fde68a;
    border-color: #f59e0b;
    transform: translateX(-2px);
  }

  .test-icon {
    font-size: 20px;
    width: 32px;
    text-align: center;
    flex-shrink: 0;
  }

  .test-content {
    flex: 1;
  }

  .test-name {
    font-size: 14px;
    font-weight: 500;
    color: #1f2937;
    margin-bottom: 2px;
  }

  .test-desc {
    font-size: 12px;
    color: #6b7280;
  }

  /* Quick Stats */
  .stats-display {
    display: flex;
    flex-direction: column;
    gap: 16px;
  }

  .stat-item {
    text-align: center;
    padding: 12px;
    background: #f0f9ff;
    border-radius: 8px;
    border: 1px solid #bae6fd;
  }

  .stat-number {
    font-size: 20px;
    font-weight: 600;
    color: #1f2937;
    display: block;
  }

  .stat-label {
    font-size: 12px;
    color: #6b7280;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    margin-top: 4px;
  }

  /* Mobile Optimizations */
  @media (max-width: 1200px) {
    .content-grid {
      grid-template-columns: 1fr;
      gap: 16px;
    }

    /* Reorder for mobile: flashcard first, then sidebars */
    .flashcard-container {
      order: 1;
      padding: 20px;
    }

    .left-sidebar {
      order: 2;
      position: static;
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 16px;
    }

    .right-sidebar {
      order: 3;
      position: static;
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 16px;
    }

    .sidebar-section {
      margin-bottom: 0;
    }
  }

  @media (max-width: 968px) {
    .study-interface {
      padding: 16px;
    }

    .search-section {
      padding: 20px;
      margin-bottom: 24px;
    }

    .left-sidebar,
    .right-sidebar {
      grid-template-columns: 1fr;
      gap: 12px;
    }

    .resource-links,
    .test-links {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 8px;
    }

    .resource-link,
    .test-link {
      padding: 12px 8px;
      font-size: 12px;
    }

    .resource-name,
    .test-name {
      font-size: 12px;
    }

    .resource-desc,
    .test-desc {
      font-size: 10px;
    }
  }

  @media (max-width: 768px) {
    .study-interface {
      padding: 8px;
    }

    .search-section {
      padding: 12px;
      margin-bottom: 16px;
    }

    .search-input {
      font-size: 16px; /* Prevents zoom on iOS */
      padding: 12px 14px;
    }

    /* Ensure flashcard appears right after header */
    .flashcard-container {
      order: 1;
      padding: 12px;
      margin-bottom: 16px;
    }

    .flashcard {
      width: 100%;
      max-width: 100%;
      height: 300px;
      margin: 0 auto;
    }
    
    .medical-term {
      font-size: 20px;
      line-height: 1.3;
    }
    
    .definition {
      font-size: 16px;
      line-height: 1.5;
    }
    
    .card-content {
      padding: 20px 16px;
    }

    .pronunciation-section {
      margin: 12px 0;
      padding: 10px;
    }

    .navigation {
      gap: 8px;
      flex-wrap: wrap;
      justify-content: center;
      margin-bottom: 20px;
    }

    .nav-btn {
      padding: 12px 16px;
      font-size: 14px;
      min-width: 100px;
      touch-action: manipulation;
    }

    /* Stack sidebar sections vertically on mobile */
    .left-sidebar,
    .right-sidebar {
      display: block;
      order: 2;
    }

    .left-sidebar {
      margin-bottom: 16px;
    }

    .sidebar-section {
      margin-bottom: 16px;
      background: #f8f9fa;
      padding: 16px;
      border-radius: 8px;
    }

    .sidebar-title {
      font-size: 16px;
      margin-bottom: 12px;
    }

    /* Mobile-friendly resource and test links */
    .resource-links,
    .test-links {
      display: grid;
      grid-template-columns: 1fr;
      gap: 8px;
    }

    .resource-link,
    .test-link {
      padding: 12px;
      border-radius: 6px;
      font-size: 14px;
    }

    .study-tools {
      display: grid;
      grid-template-columns: 1fr;
      gap: 8px;
    }

    .tool-link {
      padding: 14px 12px;
      text-align: center;
      font-size: 14px;
    }

    .stats-display {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 8px;
    }

    .stat-item {
      padding: 10px;
      text-align: center;
    }
  }

  /* Extra small mobile devices */
  @media (max-width: 480px) {
    .study-interface {
      padding: 8px;
    }

    .flashcard {
      height: 250px;
    }

    .medical-term {
      font-size: 20px;
    }

    .definition {
      font-size: 15px;
    }

    .card-content {
      padding: 20px 12px;
    }

    .flashcard-container {
      padding: 12px;
    }

    .nav-btn {
      padding: 10px 16px;
      font-size: 13px;
      min-width: 100px;
    }

    .navigation {
      gap: 8px;
    }

    .pronunciation-btn {
      padding: 8px 16px;
      font-size: 13px;
    }

    /* Make resource links more touch-friendly */
    .resource-link,
    .test-link {
      padding: 16px 12px;
    }

    .tool-link {
      padding: 16px 8px;
    }
  }
</style>

<script is:inline define:vars={{ terms, category }}>
  let currentIndex = 0;
  let studyTerms = [...terms];
  let isFlipped = false;

  function updateFlashcard() {
    if (studyTerms.length === 0) return;
    
    const term = studyTerms[currentIndex];
    const cardCounter = document.getElementById('cardCounter');
    const cardCounterBack = document.getElementById('cardCounterBack');
    const medicalTerm = document.getElementById('medicalTerm');
    const definition = document.getElementById('definition');
    const example = document.getElementById('example');
    const exampleSection = document.getElementById('exampleSection');
    
    // Update counters
    const counterText = `${currentIndex + 1} / ${studyTerms.length}`;
    if (cardCounter) cardCounter.textContent = counterText;
    if (cardCounterBack) cardCounterBack.textContent = counterText;
    
    // Update content
    if (medicalTerm) medicalTerm.textContent = term.term;
    if (definition) definition.textContent = term.definition;
    
    // Update pronunciation guide
    const pronunciationText = document.getElementById('pronunciationText');
    if (pronunciationText) {
      pronunciationText.textContent = term.pronunciation || term.term;
    }
    
    // Handle example
    if (term.example && example && exampleSection) {
      example.textContent = term.example;
      exampleSection.style.display = 'block';
    } else if (exampleSection) {
      exampleSection.style.display = 'none';
    }
    
    // Update button states
    updateButtons();
    
    // Reset flip state
    resetFlip();
  }

  function resetFlip() {
    const flashcardInner = document.getElementById('flashcardInner');
    if (flashcardInner) {
      flashcardInner.classList.remove('flipped');
      isFlipped = false;
    }
  }

  function updateButtons() {
    const prevBtn = document.getElementById('prevBtn');
    const nextBtn = document.getElementById('nextBtn');
    
    if (prevBtn) {
      prevBtn.disabled = currentIndex === 0;
    }
    if (nextBtn) {
      nextBtn.disabled = currentIndex === studyTerms.length - 1;
    }
  }

  function nextCard() {
    if (currentIndex < studyTerms.length - 1) {
      currentIndex++;
      updateFlashcard();
    }
  }

  function previousCard() {
    if (currentIndex > 0) {
      currentIndex--;
      updateFlashcard();
    }
  }

  function shuffleCards() {
    for (let i = studyTerms.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [studyTerms[i], studyTerms[j]] = [studyTerms[j], studyTerms[i]];
    }
    currentIndex = 0;
    updateFlashcard();
  }

  function flipCard() {
    const flashcardInner = document.getElementById('flashcardInner');
    if (flashcardInner) {
      if (isFlipped) {
        flashcardInner.classList.remove('flipped');
        isFlipped = false;
      } else {
        flashcardInner.classList.add('flipped');
        isFlipped = true;
      }
    }
  }

  function pronounceTerm() {
    if (studyTerms.length === 0) return;
    
    const term = studyTerms[currentIndex];
    const pronounceBtn = document.getElementById('pronounceBtn');
    
    // Check if speech synthesis is supported
    if (!('speechSynthesis' in window)) {
      alert('Sorry, your browser does not support text-to-speech.');
      return;
    }
    
    // Stop any ongoing speech
    speechSynthesis.cancel();
    
    // Create utterance
    const utterance = new SpeechSynthesisUtterance(term.term);
    
    // Set voice properties for medical terminology
    utterance.rate = 0.8; // Slightly slower for clarity
    utterance.pitch = 1.0;
    utterance.volume = 1.0;
    
    // Try to find a suitable voice (prefer English voices)
    const voices = speechSynthesis.getVoices();
    const preferredVoices = voices.filter(voice => 
      voice.lang.startsWith('en') && 
      (voice.name.includes('Female') || voice.name.includes('Male') || voice.default)
    );
    
    if (preferredVoices.length > 0) {
      utterance.voice = preferredVoices[0];
    } else if (voices.length > 0) {
      utterance.voice = voices[0];
    }
    
    // Visual feedback
    if (pronounceBtn) {
      const originalText = pronounceBtn.querySelector('.pronunciation-text').textContent;
      const iconElement = pronounceBtn.querySelector('.pronunciation-icon');
      
      pronounceBtn.disabled = true;
      pronounceBtn.querySelector('.pronunciation-text').textContent = 'Speaking...';
      iconElement.textContent = 'üîà';
      
      // Reset button when speech ends
      utterance.onend = () => {
        pronounceBtn.disabled = false;
        pronounceBtn.querySelector('.pronunciation-text').textContent = originalText;
        iconElement.textContent = 'üîä';
      };
      
      utterance.onerror = () => {
        pronounceBtn.disabled = false;
        pronounceBtn.querySelector('.pronunciation-text').textContent = originalText;
        iconElement.textContent = 'üîä';
        console.error('Speech synthesis error');
      };
    }
    
    // Speak the term
    speechSynthesis.speak(utterance);
  }

  // Initialize when DOM is loaded
  document.addEventListener('DOMContentLoaded', function() {
    // Update initial display
    updateFlashcard();
    
    // Add event listeners
    const flashcard = document.getElementById('flashcard');
    const prevBtn = document.getElementById('prevBtn');
    const nextBtn = document.getElementById('nextBtn');
    const shuffleBtn = document.getElementById('shuffleBtn');
    const pronounceBtn = document.getElementById('pronounceBtn');
    
    if (flashcard) {
      flashcard.addEventListener('click', flipCard);
    }
    
    if (prevBtn) {
      prevBtn.addEventListener('click', previousCard);
    }
    
    if (nextBtn) {
      nextBtn.addEventListener('click', nextCard);
    }
    
    if (shuffleBtn) {
      shuffleBtn.addEventListener('click', shuffleCards);
    }
    
    if (pronounceBtn) {
      pronounceBtn.addEventListener('click', pronounceTerm);
    }
    
    // Load voices when they become available (some browsers load them asynchronously)
    if ('speechSynthesis' in window) {
      speechSynthesis.onvoiceschanged = () => {
        // Voices are now loaded
      };
    }
    
    // Add keyboard shortcut for pronunciation (Space bar)
    document.addEventListener('keydown', function(event) {
      if (event.code === 'Space' && event.target.tagName !== 'INPUT') {
        event.preventDefault();
        pronounceTerm();
      }
    });
    
    // Mobile touch interactions
    let touchStartX = 0;
    let touchStartY = 0;
    let touchEndX = 0;
    let touchEndY = 0;
    
    if (flashcard) {
      flashcard.addEventListener('touchstart', function(event) {
        touchStartX = event.changedTouches[0].screenX;
        touchStartY = event.changedTouches[0].screenY;
      }, { passive: true });
      
      flashcard.addEventListener('touchend', function(event) {
        touchEndX = event.changedTouches[0].screenX;
        touchEndY = event.changedTouches[0].screenY;
        handleSwipe();
      }, { passive: true });
    }
    
    function handleSwipe() {
      const deltaX = touchEndX - touchStartX;
      const deltaY = touchEndY - touchStartY;
      const minSwipeDistance = 50;
      
      // Ensure horizontal swipe is more significant than vertical
      if (Math.abs(deltaX) > Math.abs(deltaY) && Math.abs(deltaX) > minSwipeDistance) {
        if (deltaX > 0) {
          // Swipe right - previous card
          previousCard();
        } else {
          // Swipe left - next card
          nextCard();
        }
      }
    }
    
    // Improve mobile scrolling
    if ('ontouchstart' in window) {
      document.body.style.overscrollBehavior = 'contain';
    }
  });
</script>